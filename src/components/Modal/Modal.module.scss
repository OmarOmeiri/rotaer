$modalPadding: 16px;


.ModalWrapper {
  position: fixed;
  z-index: 22;
  width: 70%;
  left: 15%;
  top: 50vh;
  box-sizing: border-box;
  transition: all 0.3s ease-out;
}

.TransparentModal *:not(:global(.no-transparent) *) {
  background-color: rgba(0,0,0,0) !important;
  color: transparent !important;
  fill: transparent !important;
  stroke: transparent !important;
  border-color: transparent !important;
  box-shadow: 0 0 0 0 transparent !important;
}

.TransparentModal {
  background-color: rgba(0,0,0,0.1) !important;
}

.NoTransparent{}



.Modal {
  background-color: white;
  border: 1px solid #ccc;
  box-shadow: 1px 1px 1px black;
  padding: $modalPadding;
  border-radius: 15px;
  transition: all 0.3s ease-out, padding 1ms;
  max-height: 75vh !important;
  height: 0;
  will-change: height;
}


@-webkit-keyframes grow {
  100% { transform: scale(1.4); }
}

@keyframes grow {
  100% { transform: scale(1.4); }
}

@-webkit-keyframes shrink {
  0% { transform: scale(1.4); }
  100% { transform: scale(1.2); }
}

@keyframes shrink {
  0% { transform: scale(1.4); }
  100% { transform: scale(1.2); }
}

.Close{
  font-weight: 900;
  background: transparent;
  border: none;
  /* float: right; */
  right: 25px;
  cursor: pointer;
  animation: shrink 0.5s backwards;
  transform: scale(1.2);
  z-index: 6;
  position: fixed;
}

.BackBtn{
  background: transparent;
  border: none;
  /* float: right; */
  left: 25px;
  cursor: pointer;
  color: black;
  animation: shrink 0.5s backwards;
  transform: scale(1.2);
  z-index: 6;
  position: fixed;
}

.LeftMarginTitle p:first-of-type {
  margin-left: 40px;
}

.Close *,
.BackBtn *{
  transition: fill ease 200ms, stroke ease 200ms;
}

.Close:focus{
  outline: none;
}

.Close:hover {
  animation: grow 200ms forwards;
}



.BackBtn:hover{
  animation: grow 200ms forwards;
  /* transform: scale(1.2); */
}

.BackBtn:hover *{
  fill: var(--mainIconHoverColor);
  stroke: var(--mainIconHoverColor);
}

.ButtonContainer{
  text-align: center;
}

@media (min-width: 600px) {
  .ModalWrapper {
    width: 500px;
    left: 0;
  }
}

@media (max-width: 600px) {
  .ModalWrapper {
    width: 100% !important;
    left: 0 !important;
  }
}


/* _____  MODAL INNER WRAPPER TRANSITION */
.Animate {
  transform-origin: center;
  transition: opacity 300ms, transform 300ms;
}

.ModalInnerWrapper{
  position: relative;
}

.Enter.Animate {
  opacity: 0;
  transform: translateX(-100%);
}
.EnterActive.Animate {
  opacity: 1;
  transform: translateX(0%);
}
// .Exit {}

.Exit.Animate {
  opacity: 1;
  transform: translateX(0%);
}
// .ExitActive{}

.ExitActive.Animate {
  opacity: 0;
  transform: translateX(100%);
}


/* width */
.Modal::-webkit-scrollbar {
  width: 5px;
  height: 5px;
  background: transparent;
}

/* Track */
.Modal::-webkit-scrollbar-track {
  display: none;
}

.Modal::-webkit-scrollbar-track-piece {
  display:none;
}
  
/* Handle */
.Modal::-webkit-scrollbar-thumb {
  background: rgb(175, 174, 174); 
  border-radius: 5px;
}

/* Handle on hover */
.Modal::-webkit-scrollbar-thumb:hover {
  background: rgb(99, 99, 99); 
}


.ModalOverflowHidden {
  overflow: hidden !important;
}

.ModalOverflow{
  overflow: scroll;
}


  
/* Handle */
.ModalOverflowHidden::-webkit-scrollbar-thumb,
.ModalOverflowHidden::-webkit-scrollbar-thumb:hover,
.ModalOverflowHidden::-webkit-scrollbar-track-piece,
.ModalOverflowHidden::-webkit-scrollbar-track,
.ModalOverflowHidden::-webkit-scrollbar {
  display: none;
}


.TransparentModal *::-webkit-scrollbar-thumb,
.TransparentModal *::-webkit-scrollbar-thumb:hover,
.TransparentModal *::-webkit-scrollbar-track-piece,
.TransparentModal *::-webkit-scrollbar-track,
.TransparentModal *::-webkit-scrollbar {
  display: none;
}


.ModalFixedTitle {
  position: fixed;
  top: 0px;
  padding-top: 16px;
  width: calc(100% - 32px);
}

.ModalShow > *{
  pointer-events: all !important;
  opacity: 1 !important;
}